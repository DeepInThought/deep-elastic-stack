version: '3.7'

services:

  elasticsearch:
    build:
      context: elasticsearch/
      args:
        BUILD_NUMBER: ${BUILD_NUMBER:-0.0.1}
        ELASTIC_STACK_VERSION: ${ELASTIC_STACK_VERSION:-6.4.2}
    container_name: deep-elasticsearch
    environment: 
      DEEP_ELASTIC_STACK_VERSION: ${DEEP_ELASTIC_STACK_VERSION:-latest}
      ELASTIC_PASSWORD: /run/secrets/elastic_stack_secret
      processors: 1
    secrets:
      - source: elastic_stack_secret
    volumes:
      - esdata:/usr/share/elasticsearch/data
    ulimits:
      nproc: 65535
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    deploy:
      resources:
        limits:
          cpus: '0.50'
          memory: ${ELASTICSEARCH_MAX_MEMORY:-1g}
        reservations:
          cpus: '0.25'
          memory: ${ELASTICSEARCH_MAX_MEMORY:-1g}
    hostname: deep-elasticsearch
    dns:
      - 1.1.1.1
      - 1.0.0.1
    networks:
      deep-elastic-stack:
        aliases:
          - elasticsearch    
    ports:
      - "9200:9200"
      - "9300:9300"
    cap_add:
      - IPC_LOCK
    healthcheck:
      test: curl -s 'http://localhost:9200/_cat/health' || exit 1
      interval: 10s
      timeout: 10s
      retries: 10

  logstash:
    build:
      context: logstash/
      args:
        BUILD_NUMBER: ${BUILD_NUMBER:-0.0.1}
        ELASTIC_STACK_VERSION: ${ELASTIC_STACK_VERSION:-6.4.2}
    container_name: deep-logstash
    environment: 
      DEEP_ELASTIC_STACK_VERSION: ${DEEP_ELASTIC_STACK_VERSION:-latest}
      ELASTIC_PASSWORD: /run/secrets/elastic_stack_secret
      TAKE_FILE_OWNERSHIP: "true"
    secrets:
      - source: elastic_stack_secret
    volumes:
      # - ./logstash/config:/usr/share/logstash/config:ro
      # - ./logstash/pipeline:/usr/share/logstash/pipeline:ro
      - lsdata:/usr/share/logstash/data
      - lsbin:/usr/share/logstash/bin
    dns:
      - 1.1.1.1
      - 1.0.0.1    
    hostname: deep-logstash
    networks: ['deep-elastic-stack']
    ports:
      - "5000:5000"
      - "9600:9600"    
    depends_on:
      - elasticsearch
    deploy:
      resources:
        limits:
          cpus: '0.50'
          memory: ${LOGSTASH_MAX_MEMORY:-1g}
        reservations:
          cpus: '0.25'
          memory: ${LOGSTASH_MAX_MEMORY:-1g}
    healthcheck:
      test: curl -s 'http://localhost:9600/_node/pipelines/main?pretty' || exit 1
      interval: 10s
      timeout: 10s
      retries: 10

  kibana:
    build:
      context: kibana/
      args:
        BUILD_NUMBER: ${BUILD_NUMBER:-0.0.1}
        DEEP_ELASTIC_STACK_VERSION: ${DEEP_ELASTIC_STACK_VERSION:-latest}
        ELASTIC_STACK_VERSION: ${ELASTIC_STACK_VERSION:-6.4.2}
    container_name: deep-kibana
    environment: 
      DEEP_ELASTIC_STACK_VERSION: ${DEEP_ELASTIC_STACK_VERSION:-latest}
      ELASTIC_PASSWORD: /run/secrets/elastic_stack_secret
      TAKE_FILE_OWNERSHIP: "true"
    secrets:
      - source: elastic_stack_secret
    volumes:
      # - ./kibana/config/:/usr/share/kibana/config:ro
      - kdata:/usr/share/kibana/data
    dns:
      - 1.1.1.1
      - 1.0.0.1
    hostname: deep-kibana
    networks: ['deep-elastic-stack']
    ports:
      - "5601:5601"
    depends_on:
      - elasticsearch
    healthcheck:
      test: curl -s 'http://localhost:5601/api/status' || exit 1
      interval: 10s
      timeout: 10s
      retries: 10

secrets:
   elastic_stack_secret:
     file: ./elastic-stack-secrets.yml

networks:
  deep-elastic-stack:
    driver: bridge
    name: deep-elastic-stack-net

volumes:
  esdata:
    driver: local
  esconfig:
    driver: local
  lsdata:
    driver: local
  lsbin:
    driver: local
  kdata:
    driver: local